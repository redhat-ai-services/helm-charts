# -- String to partially override fullname template (will maintain the release name)
nameOverride: ""

# -- String to fully override fullname template
fullnameOverride: ""

# -- (array/object) An array of repos objects to be configured within ArgoCD
repos: []
  # - name: private-repo-example
  #   type: git
  #   url: https://github.com/private/repo.git
  #   username: username
  #   password: password

# -- (array/object) An array of projects objects to be configured within ArgoCD
projects:
  - name: default
    description: ""
    destinations: []
      # - namespace: '*'
      #   server: '*'
    clusterResourceWhitelist: []
      # - group: '*'
      #   kind: '*'
    sourceRepos: []
      # - '*'

rbac:
  # -- RBAC mapping for roles within ArgoCD
  policy: |-
    g, system:cluster-admins, role:admin
  # -- RBAC objects that can be utilized within the policy mapping
  scopes: '[groups]'

# -- Create pipeline accounts and generate a token in the designated namespace
pipelineAccounts:
  # - name: pipeline
  #   namespace: default

# -- Extra config options
extraConfig: {}

# -- Resource customizations for ArgoCD instance
# resourceCustomizations: {}
resourceCustomizations:
  machinelearning.seldon.io/SeldonDeployment:
    health.lua: |
      health_status = {}
      if obj.status ~= nil then
        if obj.status.conditions ~= nil then
          numConditions = 0
          numTrue = 0
          numFalse = 0
          message = ""
          for _, condition in pairs(obj.status.conditions) do
            numConditions = numConditions + 1
            if condition.status == "False" then
              numFalse = numFalse + 1
              message = message .. " " .. condition.type .. ": " .. condition.reason .. ";"
            elseif condition.status == "True" then
              numTrue = numTrue + 1
            end
          end
          if numTrue == numConditions then
            health_status.status = "Healthy"
            health_status.message = "SeldonDeployment is healthy"
            return health_status
          else numFalse > 0 then
            health_status.status = "Progressing"
            health_status.message = message
            return health_status
          end
        end
      end

      health_status.status = "Progressing"
      health_status.message = "Waiting for SeldonDeployment"
      return health_status

# -- Resource exclusion list for ArgoCD instance
resourceExclusions:
  - apiGroups:
      - tekton.dev
    clusters:
      - '*'
    kinds:
      - TaskRun
      - PipelineRun

server:
  autoscale:
    # -- Enable autoscaling for server pod
    enabled: false
  grpc:
    ingress:
      # -- Enable grpc ingress option
      enabled: false
  ingress:
    # -- Enable access via ingress
    enabled: false
  route:
    # -- Enable access via OpenShift route
    enabled: true
    tls:
      # -- TLS cert termination policy for accessing ArgoCD Route
      termination: reencrypt
      # -- Insecure policy behavior for accessing ArgoCD Route
      insecureEdgeTerminationPolicy: Redirect
  service:
    type: ''
  # -- Resource requests and limits for the server pod
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 125m
      memory: 128Mi

grafana:
  # -- Enable grafana instance
  enabled: false
  ingress:
    # -- Enable access via ingress
    enabled: false
  route:
    # -- Enable access via OpenShift route
    enabled: false

prometheus:
  # -- Enable prometheus instance
  enabled: false
  ingress:
    # -- Enable access via ingress
    enabled: false
  route:
    # -- Enable access via OpenShift route
    enabled: false

notifications:
  # -- Enable notifications plugin
  enabled: true

sso:
  dex:
    # -- Enable login via OpenShiftOAuth
    openShiftOAuth: true
    # -- Resource requests and limits for the dex pod
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  # -- SSO provider
  provider: dex

applicationSet:
  # -- Resource requests and limits for the applicationSet pod
  resources:
    limits:
      cpu: '2'
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi

repo:
  # -- Resource requests and limits for the repo pod
  resources:
    limits:
      cpu: '1'
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 256Mi

ha:
  enabled: false
  # -- Resource requests and limits
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 250m
      memory: 128Mi

redis:
  # -- Resource requests and limits for the redis pods
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 250m
      memory: 128Mi

controller:
  # -- Resource requests and limits for the controller pod
  resources:
    limits:
      cpu: 2000m
      memory: 2048Mi
    requests:
      cpu: 250m
      memory: 1024Mi
